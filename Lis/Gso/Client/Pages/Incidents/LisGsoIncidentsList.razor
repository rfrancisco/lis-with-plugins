@inherits LisGsoBaseActivity

<LisCard Title="List" OnClose="GsoNavigation.HideSecondaryActivity">
    @if (_actions?.Length > 0) {
        <div class="list-actions">
            <MudMenu Label="Options" EndIcon="@Icons.Filled.KeyboardArrowDown" Color="Color.Primary" Variant="Variant.Filled">
                @foreach (var action in _actions) {
                    <MudMenuItem OnClick="() => action.OnClick(new GsoIncidentsListActionContext(Incidents))"><MudText Color="@action.Color">@action.Label</MudText></MudMenuItem>
                }
            </MudMenu>
        </div>
    }
    @if (Incidents != null) {
        <ul>
            <Virtualize Items="@Incidents" Context="incident">
                <li>
                    <div class="list-item-title">
                        @incident.Reference
                    </div>
                    <div class="list-item-actions">
                        @if (_itemActions?.Length > 0) {
                            <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                                @foreach (var action in _itemActions) {
                                    <MudMenuItem OnClick="() => action.OnClick(new GsoIncidentsListItemActionContext(incident))"><MudText Color="@action.Color">@action.Label</MudText></MudMenuItem>
                                }
                            </MudMenu>
                        }
                    </div>
                </li>
            </Virtualize>
        </ul>
    }
</LisCard>

@code {
    GsoAction<GsoIncidentsListActionContext>[] _actions;
    GsoAction<GsoIncidentsListItemActionContext>[] _itemActions;

    [CascadingParameter]
    public GsoIncident[] Incidents { get; set; }

    protected override void OnInitialized() {
        _actions = GsoPlugins.AvailablePlugins.SelectMany(x => x.IncidentsListActions).ToArray();
        _itemActions = GsoPlugins.AvailablePlugins.SelectMany(x => x.IncidentsListItemActions).ToArray();
    }
}