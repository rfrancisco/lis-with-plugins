@inherits LisGsoBaseActivity

@inject ISnackbar Snackbar

<LisCard Title="Edit" OnClose="GsoNavigation.HidePrimaryActivity">
    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
        @foreach (var extension in _extensions.Where(x => x.Placement == ExtentionPlacement.Top)) {
            <DynamicComponent Type="extension.ComponentType" />
        }
        <MudTextField T="string" Label="Title" Required="true" RequiredError="Title is required!"/>
        <MudSelect T="string" Label="Type" Required="true" RequiredError="Type is required!">
            <MudSelectItem Value="@("Type #1")" />
            <MudSelectItem Value="@("Type #2")" />
            <MudSelectItem Value="@("Type #3")" />
        </MudSelect>
        <br>Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat. Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.<br><br>
        @foreach (var extension in _extensions.Where(x => x.Placement == ExtentionPlacement.Bottom)) {
            <DynamicComponent Type="extension.ComponentType" />
        }
    </MudForm>
    <MudButton OnClick="Save" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
</LisCard>

@code {
    GsoExtension[] _extensions = { };
    bool success;
    string[] errors = { };
    MudForm form;

    protected override void OnInitialized() {
        _extensions = GsoPlugins.AvailablePlugins.SelectMany(x => x.IncidentEditExtensions).ToArray();
    }

    async Task Save() {
        await form.Validate();
        if (form.IsValid) {
            foreach (var extension in _extensions) {
                extension?.BeforeSave();
            }

            GsoNavigation.HidePrimaryActivity();
            Snackbar.Add("Edit completed with success!", Severity.Success);

            foreach (var extension in _extensions) {
                extension?.AfterSave();
            }
        } else {
            Snackbar.Add("Please fix form validation issues!", Severity.Error);
        }
    }
}